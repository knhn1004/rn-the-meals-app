!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
App	App.js	/^export default function App() {$/;"	f
Async	App.js	/^        startAsync={fetchFonts}$/;"	c
BackTitleStyle	navigation/MealsNavigator.js	/^  headerBackTitleStyle: {$/;"	c
BarOptions	navigation/MealsNavigator.js	/^        tabBarOptions: {$/;"	c
CATEGORIES	data/dummy-data.js	/^export const CATEGORIES = [$/;"	n
Categories	navigation/MealsNavigator.js	/^    Categories: {$/;"	c
Categories	navigation/MealsNavigator.js	/^    Categories: {$/;"	o
Category	models/category.js	/^class Category {$/;"	c
CategoryGridTile	components/CategoryGridTile.js	/^const CategoryGridTile = ({ title, onSelect, color }) => {$/;"	c
CategoryMeals	navigation/MealsNavigator.js	/^    CategoryMeals: {$/;"	c
CategoryMeals	navigation/MealsNavigator.js	/^    CategoryMeals: {$/;"	o
Change	screens/FiltersScreen.js	/^        onChange={newVal => setGlutenFree(newVal)}$/;"	c
Change	screens/FiltersScreen.js	/^        onChange={newVal => setLactoseFree(newVal)}$/;"	c
Change	screens/FiltersScreen.js	/^        onChange={newVal => setVegan(newVal)}$/;"	c
Change	screens/FiltersScreen.js	/^        onChange={newVal => setVegetarian(newVal)}$/;"	c
Color	screens/FiltersScreen.js	/^        thumbColor={Platform.OS === 'ios' ? '' : Colors.primaryColor}$/;"	c
Color	screens/FiltersScreen.js	/^        trackColor={{ true: Colors.primaryColor }}$/;"	c
Columns	screens/CategoriesScreen.js	/^      numColumns={2}$/;"	c
Container	components/MealItem.js	/^  titleContainer: {$/;"	c
Container	screens/FiltersScreen.js	/^  filterContainer: {$/;"	c
Data	screens/CategoriesScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
Data	screens/CategoryMealsScreen.js	/^  return <MealList listData={displayedMeals} navigation={props.navigation} \/>$/;"	c
Data	screens/FavoritesScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
Data	screens/FavoritesScreen.js	/^  return <MealList listData={favMeals} navigation={navigation} \/>$/;"	c
Data	screens/FiltersScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
Detail	components/MealItem.js	/^  mealDetail: {$/;"	c
Extractor	screens/CategoriesScreen.js	/^      keyExtractor={(item, index) => item.id}$/;"	c
Fav	screens/MealDetailScreen.js	/^  const isFav = useSelector(state =>$/;"	c
FavoriteHandler	screens/MealDetailScreen.js	/^  const toggleFavoriteHandler = useCallback(() => {$/;"	c
Favorites	navigation/MealsNavigator.js	/^  Favorites: {$/;"	c
Favorites	navigation/MealsNavigator.js	/^  Favorites: {$/;"	o
FavoritesScreen	screens/FavoritesScreen.js	/^const FavoritesScreen = ({ navigation }) => {$/;"	c
FavoritesStackNavigator	navigation/MealsNavigator.js	/^const FavoritesStackNavigator = createStackNavigator($/;"	c
FilterStackNav	navigation/MealsNavigator.js	/^const FilterStackNav = createStackNavigator($/;"	c
FilterSwitch	screens/FiltersScreen.js	/^const FilterSwitch = ({ label, value, onChange }) => {$/;"	c
Filters	screens/FiltersScreen.js	/^    const appliedFilters = {$/;"	c
Filters	screens/FiltersScreen.js	/^  const saveFilters = useCallback(() => {$/;"	c
FiltersScreen	screens/FiltersScreen.js	/^const FiltersScreen = ({ navigation }) => {$/;"	c
Finish	App.js	/^        onFinish={() => setFontLoaded(true)}$/;"	c
Fonts	App.js	/^const fetchFonts = async () => {$/;"	c
Header	components/MealItem.js	/^  mealHeader: {$/;"	c
HeaderButtonComponent	navigation/NavHamburger.js	/^    <HeaderButtons HeaderButtonComponent={HeaderButton}>$/;"	c
HeaderButtonComponent	screens/FiltersScreen.js	/^    <HeaderButtons HeaderButtonComponent={HeaderButton}>$/;"	c
HeaderButtonComponent	screens/MealDetailScreen.js	/^    <HeaderButtons HeaderButtonComponent={HeaderButton}>$/;"	c
IconComponent	components/HeaderButton.js	/^      IconComponent={Ionicons}$/;"	c
Img	components/MealItem.js	/^  bgImg: {$/;"	c
Item	components/CategoryGridTile.js	/^  gridItem: {$/;"	c
Item	components/MealItem.js	/^  mealItem: {$/;"	c
Item	components/MealList.js	/^        renderItem={renderMealItem}$/;"	c
Item	screens/CategoriesScreen.js	/^      renderItem={renderGridItem}$/;"	c
Item	screens/MealDetailListItem.js	/^  listItem: {$/;"	c
Left	screens/CategoriesScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
Left	screens/FavoritesScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
Left	screens/FiltersScreen.js	/^  headerLeft: () => <NavHamburger navData={navData} \/>,$/;"	c
MEALS	data/dummy-data.js	/^export const MEALS = [$/;"	n
MainNavigator	navigation/MealsNavigator.js	/^const MainNavigator = createDrawerNavigator($/;"	c
Meal	models/meal.js	/^class Meal {$/;"	c
MealDetail	navigation/MealsNavigator.js	/^    MealDetail: {$/;"	c
MealDetail	navigation/MealsNavigator.js	/^    MealDetail: {$/;"	o
MealList	components/MealList.js	/^const MealList = ({ listData, navigation }) => {$/;"	c
Meals	components/MealList.js	/^  const favMeals = useSelector(state => state.meals.favoriteMeals)$/;"	c
Meals	navigation/MealsNavigator.js	/^  Meals: {$/;"	c
Meals	navigation/MealsNavigator.js	/^  Meals: {$/;"	o
Meals	screens/CategoryMealsScreen.js	/^  const availableMeals = useSelector(state => state.meals.filteredMeals)$/;"	c
Meals	screens/FavoritesScreen.js	/^  const favMeals = useSelector(state => state.meals.favoriteMeals)$/;"	c
Meals	screens/MealDetailScreen.js	/^  const availableMeals = useSelector(state => state.meals.meals)$/;"	c
MealsFavs	navigation/MealsNavigator.js	/^    MealsFavs: {$/;"	c
MealsFavs	navigation/MealsNavigator.js	/^    MealsFavs: {$/;"	o
MealsStackNavigator	navigation/MealsNavigator.js	/^const MealsStackNavigator = createStackNavigator($/;"	c
Name	screens/MealDetailScreen.js	/^        iconName={isFav ? 'ios-star' : 'ios-star-outline'}$/;"	c
NavHamburger	navigation/NavHamburger.js	/^const NavHamburger = ({navData}) => {$/;"	c
OfLines	components/MealItem.js	/^                <Text style={styles.title} numberOfLines={1}>$/;"	c
Offset	components/CategoryGridTile.js	/^    shadowOffset: { width: 0, height: 2 },$/;"	c
Options	navigation/MealsNavigator.js	/^      \/\/ navigationOptions: {$/;"	c
Options	navigation/MealsNavigator.js	/^      navigationOptions: {$/;"	c
Options	navigation/MealsNavigator.js	/^    contentOptions: {$/;"	c
Options	navigation/MealsNavigator.js	/^    navigationOptions: {$/;"	c
Press	components/CategoryGridTile.js	/^      <TouchableComponent style={{ flex: 1 }} onPress={onSelect}>$/;"	c
Press	components/MealItem.js	/^      <TouchableOpacity onPress={props.onSelectMeal}>$/;"	c
Press	navigation/NavHamburger.js	/^        onPress={() => {$/;"	c
Press	screens/FiltersScreen.js	/^        onPress={navData.navigation.getParam('save')}$/;"	c
Press	screens/MealDetailScreen.js	/^        onPress={toggleFavorite}$/;"	c
Reducer	App.js	/^const rootReducer = combineReducers({$/;"	c
Reducer	store/reducers/meals.js	/^const mealsReducer = (state = initialState, action) => {$/;"	c
Right	screens/FiltersScreen.js	/^  headerRight: () => ($/;"	c
Right	screens/MealDetailScreen.js	/^  const headerRight = () => ($/;"	c
Row	components/MealItem.js	/^  mealRow: {$/;"	c
SET_FILTERS	store/actions/meals.js	/^export const SET_FILTERS = 'SET_FILTERS'$/;"	n
ScreenConfig	navigation/MealsNavigator.js	/^const tabScreenConfig = {$/;"	c
Select	screens/CategoriesScreen.js	/^        onSelect={() => {$/;"	c
SelectMeal	components/MealList.js	/^        onSelectMeal={() => {$/;"	c
Size	components/HeaderButton.js	/^      iconSize={23}$/;"	c
StackNavOptions	navigation/MealsNavigator.js	/^const defaultStackNavOptions = {$/;"	c
State	store/reducers/meals.js	/^const initialState = {$/;"	c
Style	navigation/MealsNavigator.js	/^          labelStyle: {$/;"	c
Style	navigation/MealsNavigator.js	/^        \/\/ barStyle: {$/;"	c
Style	navigation/MealsNavigator.js	/^      labelStyle: {$/;"	c
Style	navigation/MealsNavigator.js	/^  headerStyle: {$/;"	c
Style	screens/FavoritesScreen.js	/^  \/\/ headerStyle: {$/;"	c
TOGGLE_FAVORITE	store/actions/meals.js	/^export const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE'$/;"	n
TitleStyle	navigation/MealsNavigator.js	/^  headerTitleStyle: {$/;"	c
Types	components/CategoryGridTile.js	/^CategoryGridTile.propTypes = {}$/;"	c
Types	components/HeaderButton.js	/^CustomHeaderButton.propTypes = {}$/;"	c
Types	components/MealItem.js	/^MealItem.propTypes = {}$/;"	c
Types	components/MealList.js	/^MealList.propTypes = {}$/;"	c
Types	screens/CategoriesScreen.js	/^CategoriesScreen.propTypes = {}$/;"	c
Types	screens/CategoryMealsScreen.js	/^CategoryMealsScreen.propTypes = {}$/;"	c
Types	screens/FavoritesScreen.js	/^FavoritesScreen.propTypes = {}$/;"	c
Types	screens/FiltersScreen.js	/^FiltersScreen.propTypes = {}$/;"	c
Types	screens/MealDetailScreen.js	/^MealDetailScreen.propTypes = {}$/;"	c
ValueChange	screens/FiltersScreen.js	/^        onValueChange={onChange}$/;"	c
barStyle	navigation/MealsNavigator.js	/^        \/\/ barStyle: {$/;"	o
bgImg	components/MealItem.js	/^  bgImg: {$/;"	o
constructor	models/category.js	/^  constructor(id, title, color) {$/;"	f
container	components/CategoryGridTile.js	/^  container: {$/;"	o
content	screens/CategoryMealsScreen.js	/^  content: {$/;"	o
content	screens/FavoritesScreen.js	/^  content: {$/;"	o
contentOptions	navigation/MealsNavigator.js	/^    contentOptions: {$/;"	o
details	screens/MealDetailScreen.js	/^  details: {$/;"	o
exports	babel.config.js	/^module.exports = function(api) {$/;"	f
filterContainer	screens/FiltersScreen.js	/^  filterContainer: {$/;"	o
function	babel.config.js	/^module.exports = function(api) {$/;"	f
gridItem	components/CategoryGridTile.js	/^  gridItem: {$/;"	o
headerBackTitleStyle	navigation/MealsNavigator.js	/^  headerBackTitleStyle: {$/;"	o
headerStyle	navigation/MealsNavigator.js	/^  headerStyle: {$/;"	o
headerStyle	screens/FavoritesScreen.js	/^  \/\/ headerStyle: {$/;"	o
headerTitleStyle	navigation/MealsNavigator.js	/^  headerTitleStyle: {$/;"	o
if	App.js	/^  if (!fontLoaded) {$/;"	f
if	screens/CategoryMealsScreen.js	/^  if (displayedMeals.length === 0) {$/;"	f
if	screens/FavoritesScreen.js	/^  if (favMeals.length === 0 || !favMeals) {$/;"	f
if	store/reducers/meals.js	/^        if (appliedFilters.glutenFree && !meal.isGlutenFree) {$/;"	f
if	store/reducers/meals.js	/^        if (appliedFilters.lactoseFree && !meal.isLactoseFree) {$/;"	f
if	store/reducers/meals.js	/^        if (appliedFilters.vegan && !meal.isVegan) {$/;"	f
if	store/reducers/meals.js	/^        if (appliedFilters.vegetarian && !meal.isVegetarian) {$/;"	f
if	store/reducers/meals.js	/^      if (existingIndex >= 0) {$/;"	f
image	screens/MealDetailScreen.js	/^  image: {$/;"	o
labelStyle	navigation/MealsNavigator.js	/^          labelStyle: {$/;"	o
labelStyle	navigation/MealsNavigator.js	/^      labelStyle: {$/;"	o
list	components/MealList.js	/^  list: {$/;"	o
listItem	screens/MealDetailListItem.js	/^  listItem: {$/;"	o
mealDetail	components/MealItem.js	/^  mealDetail: {$/;"	o
mealHeader	components/MealItem.js	/^  mealHeader: {$/;"	o
mealItem	components/MealItem.js	/^  mealItem: {$/;"	o
mealRow	components/MealItem.js	/^  mealRow: {$/;"	o
navigationOptions	navigation/MealsNavigator.js	/^      \/\/ navigationOptions: {$/;"	o
navigationOptions	navigation/MealsNavigator.js	/^      navigationOptions: {$/;"	o
navigationOptions	navigation/MealsNavigator.js	/^    navigationOptions: {$/;"	o
params	components/MealList.js	/^            params: {$/;"	o
params	screens/CategoriesScreen.js	/^            params: { categoryId: itemData.item.id },$/;"	o
propTypes	components/CategoryGridTile.js	/^CategoryGridTile.propTypes = {}$/;"	o
propTypes	components/HeaderButton.js	/^CustomHeaderButton.propTypes = {}$/;"	o
propTypes	components/MealItem.js	/^MealItem.propTypes = {}$/;"	o
propTypes	components/MealList.js	/^MealList.propTypes = {}$/;"	o
propTypes	screens/CategoriesScreen.js	/^CategoriesScreen.propTypes = {}$/;"	o
propTypes	screens/CategoryMealsScreen.js	/^CategoryMealsScreen.propTypes = {}$/;"	o
propTypes	screens/FavoritesScreen.js	/^FavoritesScreen.propTypes = {}$/;"	o
propTypes	screens/FiltersScreen.js	/^FiltersScreen.propTypes = {}$/;"	o
propTypes	screens/MealDetailScreen.js	/^MealDetailScreen.propTypes = {}$/;"	o
screen	screens/CategoriesScreen.js	/^  screen: {$/;"	o
screen	screens/FiltersScreen.js	/^  screen: {$/;"	o
shadowOffset	components/CategoryGridTile.js	/^    shadowOffset: { width: 0, height: 2 },$/;"	o
switch	store/reducers/meals.js	/^  switch (action.type) {$/;"	f
tabBarOptions	navigation/MealsNavigator.js	/^        tabBarOptions: {$/;"	o
text	components/DefaultText.js	/^  text: {$/;"	o
title	components/CategoryGridTile.js	/^  title: {$/;"	o
title	components/MealItem.js	/^  title: {$/;"	o
title	screens/FiltersScreen.js	/^  title: {$/;"	o
title	screens/MealDetailScreen.js	/^  title: {$/;"	o
titleContainer	components/MealItem.js	/^  titleContainer: {$/;"	o
